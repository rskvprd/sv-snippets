{
  "uvm_object": {
    "prefix": "uvm_object",
    "context": [
      "meta.package.systemverilog",
      "source.systemverilog"
    ],
    "body": [
      "class ${1:$TM_FILENAME_BASE} extends ${2:uvm_object};",
      "\t`uvm_object_utils($1);\n",
      "\t///////////////",
      "\t// Variables //",
      "\t///////////////\n",
      "",
      "\t/////////////////",
      "\t// Constraints //",
      "\t/////////////////\n",
      "",
      "\t///////////////",
      "\t// Functions //",
      "\t///////////////\n",
      "",
      "\tfunction new(string name = \"$1\");",
      "\t\tsuper.new(name);",
      "\tendfunction : new",
      "\t$0",
      "endclass : $1\n"
    ],
    "description": "UVM object class template"
  },
  "uvm_object_with_parameters": {
    "prefix": "uvm_object_with_parameters",
    "context": [
      "meta.package.systemverilog",
      "source.systemverilog"
    ],
    "body": [
      "class ${1:$TM_FILENAME_BASE} #(${2:parameters}) extends ${3:uvm_object};",
      "\ttypedef $1 #(${2/(\\b(parameter|type)\\s+([A-Za-z_][A-Za-z0-9_$]*)(\\s*=\\s*([A-Za-z0-9_$]+))?)*\\b/$3/g}) this_type_t;",
      "\t`uvm_object_param_utils(this_type_t);\n",
      "\t///////////////",
      "\t// Variables //",
      "\t///////////////\n",
      "\t/////////////////",
      "\t// Constraints //",
      "\t/////////////////\n",
      "\t///////////////",
      "\t// Functions //",
      "\t///////////////\n",
      "\tfunction new(string name = \"$1\");",
      "\t\tsuper.new(name);",
      "\tendfunction : new",
      "\t$0",
      "endclass : $1\n"
    ],
    "description": "UVM parametrized object class template"
  },
  "uvm_component": {
    "prefix": "uvm_component",
    "context": [
      "meta.package.systemverilog",
      "source.systemverilog"
    ],
    "body": [
      "class ${1:$TM_FILENAME_BASE} extends ${2:uvm_component};",
      "\t`uvm_component_utils($1);\n",
      "\t//////////////////////////",
      "\t// Configuration Object //",
      "\t//////////////////////////\n",
      "\t${3:config_obj_t} config_obj;\n\n",
      "\t////////////////",
      "\t// Components //",
      "\t////////////////\n",
      "\t///////////////",
      "\t// Variables //",
      "\t///////////////\n",
      "\t///////////////",
      "\t// Functions //",
      "\t///////////////\n",
      "\tfunction new(string name = \"$1\", uvm_component parent);",
      "\t\tsuper.new(name, parent);",
      "\tendfunction : new\n",
      "\t$0",
      "endclass : $1\n"
    ],
    "description": "UVM component class template"
  },
  "uvm_component_with_parameters": {
    "prefix": "uvm_component_with_parameters",
    "context": [
      "meta.package.systemverilog",
      "source.systemverilog"
    ],
    "body": [
      "class ${1:$TM_FILENAME_BASE} #(${2:parameters}) extends ${3:uvm_component};",
      "\ttypedef $1 #(${2/(\\b(parameter|type)\\s+([A-Za-z_][A-Za-z0-9_$]*)(\\s*=\\s*([A-Za-z0-9_$]+))?)*\\b/$3/g}) this_type_t;",
      "\t`uvm_component_param_utils(this_type_t);\n",
      "\t//////////////////////////",
      "\t// Configuration Object //",
      "\t//////////////////////////\n",
      "\t${4:config_obj_t} config_obj;\n\n",
      "\t////////////////",
      "\t// Components //",
      "\t////////////////\n",
      "\t///////////////",
      "\t// Variables //",
      "\t///////////////\n",
      "\tfunction new(string name = \"$1\", uvm_component parent);",
      "\t\tsuper.new(name, parent);",
      "\tendfunction : new\n",
      "\t$0",
      "endclass : $1\n"
    ],
    "description": "UVM parametrized component class template"
  },
  "uvm_component_extended": {
    "prefix": "uvm_component_extended",
    "context": [
      "meta.package.systemverilog",
      "source.systemverilog"
    ],
    "body": [
      "class ${1:$TM_FILENAME_BASE} extends ${2:base_class};",
      "\t`uvm_component_utils($1);\n",
      "\t//////////////////////////",
      "\t// Configuration Object //",
      "\t//////////////////////////\n",
      "\t////////////////",
      "\t// Components //",
      "\t////////////////\n",
      "\t///////////////",
      "\t// Variables //",
      "\t///////////////\n",
      "\t///////////////",
      "\t// Functions //",
      "\t///////////////\n",
      "\tfunction new(string name = \"$1\", uvm_component parent);",
      "\t\tsuper.new(name, parent);",
      "\tendfunction : new\n",
      "\textern function void build_phase(uvm_phase phase);",
      "\textern function void connect_phase(uvm_phase phase);",
      "\textern function void end_of_elaboration_phase(uvm_phase phase);\n",
      "\textern function void start_of_simulation_phase(uvm_phase phase);",
      "\textern task reset_phase(uvm_phase phase);",
      "\textern task configure_phase(uvm_phase phase);",
      "\textern task main_phase(uvm_phase phase);",
      "\textern task shutdown_phase(uvm_phase phase);\n",
      "\textern function void extract_phase(uvm_phase phase);",
      "\textern function void report_phase(uvm_phase phase);",
      "\t$0",
      "endclass : $1\n\n",
      "",
      "function void $1::build_phase(uvm_phase phase);",
      "\t// super.build_phase(phase);",
      "endfunction : build_phase\n\n",
      "function void $1::connect_phase(uvm_phase phase);",
      "\tsuper.connect_phase(phase);",
      "endfunction : connect_phase\n\n",
      "function void $1::end_of_elaboration_phase(uvm_phase phase);",
      "\tsuper.end_of_elaboration_phase(phase);",
      "endfunction : end_of_elaboration_phase\n\n",
      "function void $1::start_of_simulation_phase(uvm_phase phase);",
      "\tsuper.start_of_simulation_phase(phase);",
      "endfunction : start_of_simulation_phase\n\n",
      "task $1::reset_phase(uvm_phase phase);",
      "endtask : reset_phase\n\n",
      "task $1::configure_phase(uvm_phase phase);",
      "endtask : configure_phase\n\n",
      "task $1::main_phase(uvm_phase phase);",
      "endtask : main_phase\n\n",
      "task $1::shutdown_phase(uvm_phase phase);",
      "endtask : shutdown_phase\n\n",
      "function void $1::report_phase(uvm_phase phase);",
      "\tsuper.report_phase(phase);",
      "endfunction : report_phase\n\n",
      "function void $1::extract_phase(uvm_phase phase);",
      "\tsuper.extract_phase(phase);",
      "endfunction : extract_phase\n\n"
    ],
    "description": "UVM component class extended template"
  },
  "uvm_sequence": {
    "prefix": "uvm_sequence",
    "context": [
      "meta.package.systemverilog",
      "source.systemverilog"
    ],
    "body": [
      "class ${1:$TM_FILENAME_BASE} extends ${2:uvm_sequence};",
      "\t`uvm_object_utils($1);\n",
      "\t///////////////",
      "\t// Variables //",
      "\t///////////////\n",
      "\t/////////////////",
      "\t// Constraints //",
      "\t/////////////////\n",
      "\t///////////////",
      "\t// Functions //",
      "\t///////////////\n",
      "\tfunction new(string name = \"$1\");",
      "\t\tsuper.new(name);",
      "\tendfunction : new\n",
      "\t// extern virtual task pre_start();\n",
      "\t// extern virtual task pre_body();\n",
      "\t// extern virtual task pre_do(bit is_item);\n",
      "\t// extern virtual function void mid_do(uvm_sequence_item this_item);\n",
      "\textern virtual task body();\n",
      "\t// extern virtual function void post_do(uvm_sequence_item this_item);\n",
      "\t// extern virtual task post_body();\n",
      "\t// extern virtual task post_start();",
      "\t$0",
      "endclass : $1"
    ],
    "description": "UVM sequence class template"
  },
  "uvm_sequence_with_parameters": {
    "prefix": "uvm_sequence_with_parameters",
    "context": [
      "meta.package.systemverilog",
      "source.systemverilog"
    ],
    "body": [
      "class ${1:$TM_FILENAME_BASE} #(${2:parameters}) extends ${3:uvm_sequence};",
      "\ttypedef $1 #(${2/(\\b(parameter|type)\\s+([A-Za-z_][A-Za-z0-9_$]*)(\\s*=\\s*([A-Za-z0-9_$]+))?)*\\b/$3/g}) this_type_t;",
      "\t`uvm_object_param_utils(this_type_t);\n",
      "\t///////////////",
      "\t// Variables //",
      "\t///////////////\n",
      "\t/////////////////",
      "\t// Constraints //",
      "\t/////////////////\n",
      "\t///////////////",
      "\t// Functions //",
      "\t///////////////\n",
      "\tfunction new(string name = \"$1\");",
      "\t\tsuper.new(name);",
      "\tendfunction : new\n",
      "\t// extern virtual task pre_start();\n",
      "\t// extern virtual task pre_body();\n",
      "\t// extern virtual task pre_do(bit is_item);\n",
      "\t// extern virtual function void mid_do(uvm_sequence_item this_item);\n",
      "\textern virtual task body();\n",
      "\t// extern virtual function void post_do(uvm_sequence_item this_item);\n",
      "\t// extern virtual task post_body();\n",
      "\t// extern virtual task post_start();",
      "\t$0",
      "endclass : $1"
    ],
    "description": "UVM sequence class template with parameters"
  },
  "uvm_sequence_functions": {
    "prefix": "uvm_sequence_functions",
    "context": [
      "meta.package.systemverilog",
      "source.systemverilog"
    ],
    "body": [
      "// task ${1:$TM_FILENAME_BASE::}pre_start();",
      "// endtask : pre_start\n\n",
      "// task $1pre_body();",
      "// endtask : pre_body\n\n",
      "// task $1pre_do(bit is_item);",
      "// endtask : pre_do\n\n",
      "// function void $1mid_do(uvm_sequence_item this_item);",
      "// endfunction : mid_do\n\n",
      "task $1body();",
      "\t$0",
      "endtask : body\n\n",
      "// function void $1post_do(uvm_sequence_item this_item);",
      "// endfunction : post_do\n\n",
      "// task $1post_body();",
      "// endtask : post_body\n\n",
      "// task $1post_start();",
      "// endtask : post_start\n"
    ],
    "description": "UVM Sequence class functions"
  },
  "uvm_sequence_item": {
    "prefix": "uvm_sequence_item",
    "context": [
      "meta.package.systemverilog",
      "source.systemverilog"
    ],
    "body": [
      "class ${1:$TM_FILENAME_BASE} extends ${2:uvm_sequence_item};",
      "\ttypedef $1 this_type_t;",
      "\t`uvm_object_utils($1);\n",
      "\t///////////////",
      "\t// Variables //",
      "\t///////////////\n",
      "\t/////////////////",
      "\t// Constraints //",
      "\t/////////////////\n",
      "\t///////////////",
      "\t// Functions //",
      "\t///////////////\n",
      "\tfunction new(string name = \"$1\");",
      "\t\tsuper.new(name);",
      "\tendfunction : new\n",
      "\t// extern function void do_copy(uvm_object rhs);",
      "\t// extern function bit do_compare(uvm_object rhs, uvm_comparer comparer);",
      "\t// extern function string convert2string();",
      "\t// extern function void do_print(uvm_printer printer);",
      "\t// extern function void do_record(uvm_recorder recorder);",
      "\t// extern function void do_pack();",
      "\t// extern function void do_unpack();",
      "\t$0",
      "endclass: $1\n\n"
    ],
    "description": "UVM sequence item class template"
  },
  "uvm_sequence_item_with_parameters": {
    "prefix": "uvm_sequence_item_with_parameters",
    "context": [
      "meta.package.systemverilog",
      "source.systemverilog"
    ],
    "body": [
      "class ${1:$TM_FILENAME_BASE} #(${2:parameters}) extends ${3:uvm_sequence_item};",
      "\ttypedef $1 #(${2/(\\b(parameter|type)\\s+([A-Za-z_][A-Za-z0-9_$]*)(\\s*=\\s*([A-Za-z0-9_$]+))?)*\\b/$3/g}) this_type_t;",
      "\t`uvm_object_param_utils(this_type_t);\n",
      "\t///////////////",
      "\t// Variables //",
      "\t///////////////\n",
      "\t/////////////////",
      "\t// Constraints //",
      "\t/////////////////\n",
      "\t///////////////",
      "\t// Functions //",
      "\t///////////////\n",
      "\tfunction new(string name = \"$1\");",
      "\t\tsuper.new(name);",
      "\tendfunction : new\n",
      "\t// extern function void do_copy(uvm_object rhs);",
      "\t// extern function bit do_compare(uvm_object rhs, uvm_comparer comparer);",
      "\t// extern function string convert2string();",
      "\t// extern function void do_print(uvm_printer printer);",
      "\t// extern function void do_record(uvm_recorder recorder);",
      "\t// extern function void do_pack();",
      "\t// extern function void do_unpack();",
      "\t$0",
      "endclass: $1\n\n"
    ],
    "description": "UVM parametrized sequence item class template"
  },
  "uvm_sequence_item_do_copy": {
    "prefix": "uvm_sequence_item_do_copy",
    "context": [
      "meta.class.systemverilog",
      "source.systemverilog"
    ],
    "body": [
      "function void ${1:$TM_FILENAME_BASE}${2:::}do_copy(uvm_object rhs);",
      "\tthis_type_t rhs_;\n",
      "\tif (!\\$cast(rhs_, rhs)) begin",
      "\t\t`uvm_error({this.get_name(), \".do_copy()\"}, \"Cast failed!\");",
      "\t\treturn;",
      "\tend",
      "\t// `uvm_info({this.get_name(), \".do_copy()\"}, \"Cast succeded.\", UVM_HIGH);\n",
      "\t/*  chain the copy with parent classes  */",
      "\tsuper.do_copy(rhs);\n",
      "\t/*  list of local properties to be copied  */",
      "\t// <this.property_name = rhs_.property_name>;",
      "endfunction : do_copy\n\n$0"
    ],
    "description": "UVM sequence item do_copy() stub"
  },
  "uvm_sequence_item_do_compare": {
    "prefix": "uvm_sequence_item_do_compare",
    "context": [
      "meta.class.systemverilog",
      "source.systemverilog"
    ],
    "body": [
      "function bit ${1:$TM_FILENAME_BASE}${2:::}do_compare(uvm_object rhs, uvm_comparer comparer);",
      "\tthis_type_t rhs_;\n",
      "\tif (!\\$cast(rhs_, rhs)) begin",
      "\t\t`uvm_error({this.get_name(), \".do_compare()\"}, \"Cast failed!\");",
      "\t\treturn;",
      "\tend",
      "\t// `uvm_info({this.get_name(), \".do_compare()\"}, \"Cast succeded.\", UVM_HIGH);\n",
      "\t/*  chain the compare with parent classes  */",
      "\tdo_compare = super.do_compare(rhs, comparer);\n",
      "\t/*  list of local properties to be compared:  */",
      "\tdo_compare &= (",
      "\t\t// <this.property_name == rhs_.property_name> &&",
      "\t\t// <this.property_name == rhs_.property_name>",
      "\t);",
      "endfunction : do_compare\n\n$0"
    ],
    "description": "UVM sequence item do_compare() stub"
  },
  "uvm_sequence_item_convert2string": {
    "prefix": "uvm_sequence_item_convert2string",
    "context": [
      "meta.class.systemverilog",
      "source.systemverilog"
    ],
    "body": [
      "function string ${1:$TM_FILENAME_BASE}${2:::}convert2string();",
      "\tstring s;\n",
      "\t/*  chain the convert2string with parent classes  */",
      "\ts = super.convert2string();\n",
      "\t/*  list of local properties to be printed:  */",
      "\t//  guide             0---4---8--12--16--20--24--28--32--36--40--44--48--",
      "\t// s = {s, \\$sformatf(\"property_label      : 0x%0h\\n\", property_name)};",
      "\t// s = {s, \\$sformatf(\"property_label      :   %0d\\n\", property_name)};\n",
      "\treturn s;",
      "endfunction : convert2string\n\n$0"
    ],
    "description": "UVM sequence item convert2string() stub"
  },
  "uvm_sequence_item_do_print": {
    "prefix": "uvm_sequence_item_do_print",
    "context": [
      "meta.class.systemverilog",
      "source.systemverilog"
    ],
    "body": [
      "function void ${1:$TM_FILENAME_BASE}${2:::}do_print(uvm_printer printer)",
      "\t/*  chain the print with parent classes  */",
      "\tsuper.do_print(printer);\n",
      "\t/*  list of local properties to be printed:  */",
      "\t// printer.print_string(\"property_label\", property_name);",
      "\t// printer.print_field_int(\"property_label\", property_name, \\$bits(property_name), UVM_HEX);",
      "endfunction : do_print\n\n$0"
    ],
    "description": "UVM sequence item do_print() stub"
  },
  "uvm_sequence_item_do_record": {
    "prefix": "uvm_sequence_item_do_record",
    "context": [
      "meta.class.systemverilog",
      "source.systemverilog"
    ],
    "body": [
      "function void ${1:$TM_FILENAME_BASE}${2:::}do_record(uvm_recorder recorder);",
      "\t/*  chain the record with parent classes  */",
      "\tsuper.do_record(recorder);\n",
      "\t/*  list of local properties to be recorded:  */",
      "\t/*  note: use uvm_record_int, uvm_record_string, uvm_record_time, uvm_record_real for known basic types.  */",
      "\t// `uvm_record_string(\"property_label\", property_name);",
      "\t// `uvm_record_int(\"property_label\", property_name, \\$bits(property_name), UVM_HEX);",
      "endfunction : do_record\n\n$0"
    ],
    "description": "UVM sequence item do_record() stub"
  },
  "uvm_sequence_item_do_pack": {
    "prefix": "uvm_sequence_item_do_pack",
    "context": [
      "meta.class.systemverilog",
      "source.systemverilog"
    ],
    "body": [
      "function void ${1:$TM_FILENAME_BASE}${2:::}do_pack(uvm_packer packer);",
      "\t/*  chain the pack with parent classes  */",
      "\tsuper.do_pack(packer);\n",
      "\t/*  list of local properties to be packed:  */",
      "\t//  note: look up the appropriate macro(s) for your properties!",
      "\t// `uvm_pack_int(property_name);",
      "\t// `uvm_pack_queue(property_name);",
      "\t// `uvm_pack_string(property_name);",
      "endfunction : do_pack\n\n$0"
    ],
    "description": "Compresses object contents into a bit format."
  },
  "uvm_sequence_item_do_unpack": {
    "prefix": "uvm_sequence_item_do_unpack",
    "context": [
      "meta.class.systemverilog",
      "source.systemverilog"
    ],
    "body": [
      "function void ${1:$TM_FILENAME_BASE}${2:::}do_unpack(uvm_packer packer);",
      "\t/*  chain the unpack with parent classes  */",
      "\tsuper.do_unpack(packer);\n",
      "\t/*  list of local properties to be unpacked:  */",
      "\t//  note: look up the appropriate macro(s) for your properties!",
      "\t// `uvm_unpack_int(property_name);",
      "\t// `uvm_unpack_queue(property_name);",
      "\t// `uvm_unpack_string(property_name);",
      "endfunction : do_unpack\n\n$0"
    ],
    "description": "Converts a bit format into the data object format."
  }
}