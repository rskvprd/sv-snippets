{
  "systemverilog_fork_join": {
    "prefix": "sv_block_parallel",
    "body": [
      "fork${1:: label}",
      "\t$0",
      "join${2:}$1",
      "${3:// disable fork;}\n"
    ],
    "description": "fork...join"
  },
  "systemverilog_begin_end": {
    "prefix": "begin",
    "body": [
      "begin",
      "\t$0",
      "end\n"
    ],
    "description": "begin...end"
  },
  "systemverilog_if_else": {
    "prefix": "ifelse",
    "body": [
      "if (${1:condition}) ${2:true_block_statement}",
      "else ${3:false_block_statement}\n$0"
    ],
    "description": "if...else..."
  },
  "systemverilog_if_else_with_blocks": {
    "prefix": "if_begin_else_begin",
    "body": [
      "if (${1:condition}) begin",
      "\t$0",
      "end else begin",
      "\t",
      "end\n"
    ],
    "description": "if begin...end else begin...end"
  },
  "systemverilog_function": {
    "prefix": "function",
    "body": [
      "function automatic ${1:void} ${2:name}(${3:args});",
      "\t$0",
      "endfunction : $2\n"
    ],
    "description": "function...endfunction"
  },
  "systemverilog_task": {
    "prefix": "task",
    "body": [
      "task automatic ${1:name}(${2:args});",
      "\t$0",
      "endtask : $1\n"
    ],
    "description": "task...endtask"
  },
  "sv_always_comb": {
    "prefix": "always_comb",
    "body": [
      "always_comb begin${1:: proc_comb}",
      "\t$0",
      "end : $1"
    ],
    "description": "always_comb"
  },
  "sv_always_ff": {
    "prefix": "always_ff",
    "body": [
      "always_ff @(posedge ${1:i_clk}) begin : ${2:proc_ff}",
      "\t$0",
      "end : $2\n"
    ],
    "description": "always_ff"
  },
  "sv_always_ff_with_rst": {
    "prefix": "always_ff_if_rst",
    "body": [
      "always_ff @(posedge ${1:i_clk}) begin : ${2:proc_ff_rst}",
      "\tif (${3:i_rst}) begin",
      "\t\t$0",
      "\tend else begin",
      "\t\t",
      "\tend",
      "end : $2\n"
    ],
    "description": "always_ff with reset"
  },
  //  Common System Calls
  "bits": {
    "prefix": "$bits",
    "body": [
      "\\$bits($1)$0"
    ],
    "description": "The $bits system function returns the number of bits required to hold an expression as a bit stream."
  },
  "cast": {
    "prefix": "$cast",
    "body": [
      "\\$cast(${1:singular_dest_var}, ${2:singular_source_expr})$0"
    ],
    "description": "The $cast system function performs a dynamic cast of an expression type."
  },
  "sformatf": {
    "prefix": "$sformatf",
    "body": [
      "\\$sformatf(\"$1\", $2)$0"
    ],
    "description": "Returns a formatted string."
  },
  "timeformat": {
    "prefix": "$timeformat",
    "body": [
      "\\$timeformat(${1:units_number}, ${2:precision_number}, ${3:suffix_string}, ${4:minimum_field_width});\n$0"
    ],
    "description": "The $timeformat system task specifies how the %t format specification reports time information."
  },
  "urandom_range": {
    "prefix": "$urandom_range",
    "body": [
      "\\$urandom_range(${1:maxval}, ${2:minval = 0})$0"
    ],
    "description": "The $urandom_range() function returns an unsigned integer within a specified range."
  },

  /////////////////////////////////////
  // Printing and simulation control //
  /////////////////////////////////////
  "display": {
		"prefix": "display",
		"body": [
			"\\$display(\"$1\"$2);$0"
		],
		"description": "$display(\"...\", params...)"
	},
  "error": {
		"prefix": "error",
		"body": [
			"\\$error(\"$1\"$2);$0"
		],
		"description": "$error(\"...\", params...)"
	},
  "fatal": {
		"prefix": "fatal",
		"body": [
			"\\$fatal(\"$1\"$2);$0"
		],
		"description": "$fatal(\"...\", params...)"
	},
  "stop": {
		"prefix": "stop",
		"body": [
			"\\$stop(2);$0"
		],
		"description": "$stop(2)"
	},
  "finish": {
		"prefix": "finish",
		"body": [
			"\\$finish(2);$0"
		],
		"description": "$finish(2)"
	},
  "assert": {
		"prefix": "assert",
		"body": [
			"assert (${1:condition}) $2",
			"else   ${3:error_process}"
		],
		"description": "insert assert() ... else ..."
	},
  "$clog2(\"\")": {
    "prefix": "clog2",
    "body": [
      "\\$clog2(${1:var})$2"
    ],
    "description": "Ceil logarithm of power 2"
  }
}